package practice;

import java.util.*;
//1-8까지의 8개의 원소가 들어가는 것을 전제로 함.

public class Dfs_basic {
	public static boolean[] visited = new boolean[9];
  //boolean 함수를 만들어줌.
	public static ArrayList< ArrayList<Integer>> graph = new ArrayList<ArrayList<Integer>>();
  //이중 배열 대신 ArrayList를 중첩으로 사용함.	
	
  public static void dfs(int x) {
		visited[x] = true;
    //맨 처음에 들어간 값을 검사해서 x가 들어갔다면 boolean의 visited 자리를 true로 설정해줌.
		System.out.print(x+" ");
    //결과 값 출력
		for(int i=0; i<graph.get(x).size(); i++) {
      //배열 안에 들어간 배열의 size()만큼 for문을 돌려줌.
			int y = graph.get(x).get(i);
      //변수 선언
			if(!visited[y]) {
        //true가 아니라면 = 방문하지 않았다면 true가 아님.
				dfs(y);	
        //방문
			}
      /
		}
	}
	public static void main(String[] args) {
		//시작되는 값(number)을 넣고 시작
    dfs(number);
	}

}
